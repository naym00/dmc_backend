# Generated by Django 4.2.7 on 2023-12-20 05:53

import datetime
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import employee.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('shift_management', '0001_initial'),
        ('department', '0001_initial'),
        ('devices', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('empgrp', '0001_initial'),
        ('designation', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('employee_id', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True)),
                ('username', models.CharField(max_length=100)),
                ('email', models.CharField(default='-', max_length=100, null=True)),
                ('password', models.CharField(default='-', max_length=100, null=True)),
                ('phone_number', models.CharField(default='-', max_length=100, null=True)),
                ('image_location', models.CharField(default='-', max_length=100, null=True)),
                ('registration_date', models.DateField(auto_now_add=True, null=True)),
                ('validity_date', models.CharField(default=employee.models.get_default_date, max_length=100, null=True)),
                ('employee_type', models.CharField(default='user', max_length=100, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=employee.models.upload_user_image)),
                ('UniqueCardNumber', models.DateTimeField(default=datetime.datetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc))),
                ('cardNo', models.BigIntegerField(default=employee.models.get_timestamp)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='department.department')),
                ('designation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='designation.designation')),
                ('group_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='empgrp.group')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TrainEmployeeFromCSV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=employee.models.user_file_upload)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.permission')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeGroupDevice',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('device_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.devices')),
                ('employee_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='employee_users', through='employee.EmployeeGroup', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='employee',
            name='shift_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='shift_management.shiftmanagement'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, error_messages={'add': 'Error message 1', 'remove': 'Error message 2'}, help_text='Specific permissions for this user.', related_name='employee_users', through='employee.EmployeePermission', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
